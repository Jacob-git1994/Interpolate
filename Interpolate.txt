a. Interpolation of ambigouus functions. Goal is to generate a grid and a table of function results to be able to 
	appoximate points in up to 3 dimentions. 
	
	1. Initalize the class based on which class you want. interp ... 1D, 2D, 3D or (Use a factory to set up parameters correctly)
	
	2. Set up map organized by <Grid points : abigious data vector/table ... i.e. vectors> -> try catch

	3. Ensure dimentions are correct based off the data you plan on adding.

	4. Add Supporting methods

	5. We will need methods to access and add data as well as return results.

	6. Will need a method to interpolate based on each class. 
		
		(a) Will need to iterate through map and find where node_i <= p <=node_j

		(b) Gather the values for private interpolation of that section

b. Grid points shall be generated by 1D, 2D, 3D Grid classes

	1. They will be sorted by left end points or x1 < x2 && y1 < y2 ... and so on

	2. You can access each grid point and node based off the class

	3. Ensure the allocation end points are poperly ordered